{"title":"Philadelphia Housing Price Prediction","markdown":{"yaml":{"title":"Philadelphia Housing Price Prediction","subtitle":"Improving Property Tax Assessments","author":"Isabelle Li, Luciano Lu, Sihan Yu","format":{"revealjs":{"theme":"simple","slide-number":true,"smaller":true,"code-overflow":"wrap","slide-level":2}},"execute":{"echo":false,"warning":false,"message":false}},"headingText":"---- Load packages ----","containsRefs":false,"markdown":"\n\n\n\n\n```{r setup, include=FALSE}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidycensus)\nlibrary(tigris)\noptions(tigris_use_cache = TRUE, tigris_class = \"sf\")\nlibrary(MASS)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(caret)\nlibrary(lm.beta)\nlibrary(knitr)\n\n# ---- Read datasets (adjust path if needed) ----\n# load data\nopa <- read_csv(\"data/opa_properties_public.csv\")\n\n# filter sales (2023 - 2024)\nopa_clean <- opa %>%\n  mutate(sale_date = as.Date(sale_date)) %>%\n  filter(sale_date >= \"2023-01-01\" & sale_date <= \"2024-12-31\")\n\n# Select relevant variables \nopa_var <- opa_clean %>%\n  dplyr::select(\n    sale_date, sale_price, market_value, building_code_description,\n    total_livable_area, number_of_bedrooms, number_of_bathrooms,\n    number_stories, garage_spaces, central_air, quality_grade,\n    interior_condition, exterior_condition, year_built,\n    zip_code, geographic_ward, census_tract, zoning, owner_1,\n    category_code_description, shape\n  )\n\n#filter to residential properties(SINGLE FAMILY)\nopa_var <- opa_var %>% \n  filter(category_code_description == \"SINGLE FAMILY\") %>%\n  distinct() %>%\n  filter(\n    !is.na(total_livable_area) & total_livable_area > 0,\n    !is.na(year_built) & year_built > 1800 & year_built <= 2025,\n  )    \n\n# remove obvious errors & handle missing values, create house age\nopa_var <- opa_var %>%\n  mutate(\n    non_market = ((sale_price / market_value < 0.05) & sale_price < 2000),\n    house_age = 2025 - year_built\n  )\n\nopa_selected <- opa_var %>% \n  filter(\n    non_market==0\n  )   \n\nopa_selected <- opa_selected %>%\n  filter(sale_price <= quantile(sale_price, 0.98, na.rm = TRUE))\n\n\nopa_sf <- st_as_sf(opa_selected, wkt = \"shape\", crs = 2272) %>%\n  st_transform(4326)\n\n# Load Census data for Philadelphia tracts\n# Load Census data for Philadelphia tracts\nphilly_census <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    black = \"B02001_003\",\n    ba_degree = \"B15003_022\",\n    total_edu = \"B15003_001\",\n    \n    median_income = \"B19013_001\",\n   \n    labor_force = \"B23025_003\",\n    unemployed = \"B23025_005\"\n  ),\n  year = 2023,\n  state = \"PA\",\n  county = \"Philadelphia\",\n  geometry = TRUE\n) %>%\n  dplyr::select(GEOID, variable, estimate, geometry) %>%   # ← 用 dplyr::\n  tidyr::pivot_wider(names_from = variable, values_from = estimate) %>%\n  dplyr::mutate(\n    ba_rate = 100 * ba_degree / total_edu,\n    unemployment_rate = 100 * unemployed / labor_force,\n    black_share = 100 * black/total_pop\n  ) %>%\n  st_transform(st_crs(opa_sf))\n\n# Spatial join of OPA data with Census data\nopa_census <- st_join(opa_sf, philly_census, join = st_within) %>%\n  filter(!is.na(median_income))\n\nTransit <- read_csv(\"data/Transit.csv\")\ntransit_sf <- st_as_sf(Transit, coords = c(\"Lon\", \"Lat\"), crs = 4326) %>%\n  st_transform(st_crs(opa_census))\nradius <- 400\nopa_census$transit_count <- lengths(st_is_within_distance(opa_census, transit_sf, dist = radius))\nread_csv(\"data/Transit.csv\", show_col_types = FALSE)\n\nrecreation <- read_csv(\"data/recreation.csv\") \nrecreation_sf <- st_as_sf(recreation, coords = c(\"X\", \"Y\"), crs = 4326) %>% st_transform(st_crs(opa_census)) \nradius_rec <- 1200 \nopa_census$recreation_count <- lengths(st_is_within_distance(opa_census, recreation_sf, dist = radius_rec)) \nread_csv(\"data/recreation.csv\", show_col_types = FALSE)\n\n#recreation dummy 0, 1-3, 4-10+\nopa_census$recreation_dummy <- case_when(\n  opa_census$recreation_count == 0 ~ \"None\",\n  opa_census$recreation_count >= 1 & opa_census$recreation_count <= 3 ~ \"Low\",\n  opa_census$recreation_count >= 4 & opa_census$recreation_count <= 8 ~ \"Medium\",\n  opa_census$recreation_count >= 9 ~ \"High\"\n)\n\n#add center city as a dummy\ncenter_city <- st_read(\"data/CCD_BOUNDARY.geojson\", quiet = TRUE) %>%\n  st_transform(st_crs(opa_census))\n\nopa_census$center_city_dummy <- as.numeric(\n  lengths(st_intersects(opa_census, center_city)) > 0\n)\n\ncrime <- read_csv(\"data/crime.csv\") %>% \n  filter(!is.na(lat) & !is.na(lng)) \ncrime_sf <- st_as_sf(crime, coords = c(\"lng\", \"lat\"), crs = 4326) %>%\n  st_transform(st_crs(opa_census)) \nradius_cri <- 400 \nopa_census$crime_count <- lengths(st_is_within_distance(opa_census, crime_sf, dist = radius_cri))\n\n# find the distance of the nearest hospital\nhospital_sf <- st_read(\"data/hospitals.geojson\", quiet = TRUE) %>%\n  st_transform(st_crs(opa_census))\n\nnearest_hospital_index <- st_nearest_feature(opa_census, hospital_sf)\n\nopa_census$nearest_hospital_m <- st_distance(\n  opa_census,\n  hospital_sf[nearest_hospital_index, ],\n  by_element = TRUE\n)\n\nopa_census$nearest_hospital_m <- as.numeric(opa_census$nearest_hospital_m)\n\nopa_census <- opa_census %>%\n  mutate(\n    has_garage = if_else(!is.na(garage_spaces) & garage_spaces > 0, 1L, 0L)\n  )\n\n\nmodel1 <- lm(sale_price ~ total_livable_area + number_of_bedrooms +\n               number_of_bathrooms + house_age + I(house_age^2),\n             data = opa_census)\n\n\nmodel4 <- lm(sale_price ~ total_livable_area + number_of_bedrooms +number_of_bathrooms + house_age + I(house_age^2) +\n               median_income + ba_rate + crime_count*unemployment_rate + black_share +  + has_garage+\n               center_city_dummy + recreation_dummy +\n               transit_count + nearest_hospital_m + I(nearest_hospital_m^2),\n             data = opa_census)\n\n```\n\n```{r}\n\n```\n\n\n# Introduction\n\n- Why this matter  \n- What we did  \n- Goal\n\n\n\n\n## Data Sources{.smaller}\n\n| Source | Description | Key Variables / Features |\n|--------|-------------|-------------------------|\n| **OPA Property Sales** | 2023–2024 residential transactions | `sale_price`, `total_livable_area`, `number_of_bedrooms`, `number_of_bathrooms`, `house_age`, `garage_spaces` |\n| **Census ACS 2023** | Socioeconomic indicators by tract | `median_income`, `ba_rate`, `unemployment_rate`,  `total_pop` |\n| **OpenDataPhilly – Transit** | Public transit locations | Count of stops within 400 m buffer (`transit_count`) |\n| **OpenDataPhilly – Recreation / Parks** | Recreation locations | Count within 1200 m buffer (`recreation_count`), categorical dummy (`recreation_dummy`) |\n| **OpenDataPhilly – Crime** | Crime incidents | Count of incidents within 400 m (`crime_count`) |\n| **Hospitals** | Hospital locations | Distance to nearest hospital (`nearest_hospital_m`) |\n| **Center City boundary** | Geojson polygon | Binary dummy (`center_city_dummy`) |\n\n\n\n\n\n## Data Overview{.smaller}\n\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\nlibrary(ggplot2)\nlibrary(patchwork)  \n\n\np_raw <- ggplot(opa_var, aes(x = sale_price)) +\n  geom_histogram(bins = 50, fill = \"hotpink\", color = \"black\") +\n  geom_vline(aes(xintercept = median(sale_price)), linetype = \"dashed\") +\n  labs(title = \"Raw Distribution\",\n       x = \"Sale Price\", y = \"Count\") +\n  scale_x_continuous(labels = scales::label_dollar())\n\n\np_cut <- opa_census %>%\n  ggplot(aes(x = sale_price)) +\n  geom_histogram(bins = 50, fill = \"skyblue\", color = \"black\") +\n  geom_vline(aes(xintercept = median(sale_price)), linetype = \"dashed\") +\n  labs(title = \"Trimmed Distribution (selected)\",\n       x = \"Sale Price\", y = \"Count\") +\n  scale_x_continuous(labels = scales::label_dollar())\n\n\nprint(\np_raw / p_cut +\nplot_annotation(\ntitle = \"Sale Price Distributions\",\ntheme = theme(\nplot.title = element_text(\nsize = 14,\nface = \"bold\",\nhjust = 0.5,\nmargin = margin(b = 10)\n)\n)\n)\n)\n```\n\n\n\n## Where Are Expensive Homes?{.smaller}\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\nlibrary(ggplot2)\n\nopa_census <- opa_census %>%\n  mutate(price_quartile = ntile(sale_price, 4))\n\n\nggplot() +\n  geom_sf(data = philly_census, fill = \"lightgrey\", color = \"white\") +\n  geom_sf(data = opa_census, aes(color = factor(price_quartile)), size = 0.1, alpha = 0.7) +\n  scale_color_viridis_d(\n    option = \"plasma\",\n    direction = -1,\n    labels = c(\"0%-25%\", \"25%-50%\", \"50%-75%\", \"75%-100%\")\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Housing Sales in Philadelphia (2023–2024)\",\n    color = \"Sale Price Quartile\"\n  ) +\n  guides(color = guide_legend(override.aes = list(size = 3)))\n```\n\n\n\n\n\n## What Drives Prices?{.smaller}\n\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\n\np1 <- ggplot(opa_census %>% st_drop_geometry(),\n       aes(x = crime_count, y = sale_price)) +\n  geom_point(alpha = 0.3, color = \"grey60\", size = 1) +\n  geom_smooth(method = \"lm\", color = \"darkorange\", linewidth = 1.2, se = FALSE) +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(\n    title = \"Relationship Between Nearby Crime and Home Sale Price\",\n    x = \"Number of Crimes within 400m\",\n    y = \"Sale Price\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    axis.text = element_text(color = \"grey30\"),\n    axis.title = element_text(color = \"grey20\")\n  )\n\n\nopa_interact <- opa_census %>% \n  st_drop_geometry() %>%\n  mutate(\n    unemp_group = ntile(unemployment_rate, 2),\n    unemp_group = factor(unemp_group,\n                         labels = c(\"Low Unemployment\", \"High Unemployment\"))\n  )\n\n\np2 <- ggplot(opa_interact, aes(x = crime_count, y = sale_price, color = unemp_group)) +\n  geom_point(alpha = 0.25, size = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 1.2) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_viridis_d(option = \"plasma\", direction = -1) +\n  labs(\n    title = \"Interaction: Crime × Unemployment Level\",\n    x = \"Number of Crimes within 400m\",\n    y = \"Sale Price\",\n    color = \"Unemployment Group\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank()\n  )\n\n\np1 / p2\n\n```\n\n\n\n\n\n## Top Predictors{.smaller}\n\n```{r}\n#| out-width: \"85%\"\n#| fig-align: \"center\"\n#| warning: false\n#| message: false\n\nmodel4_std <- lm.beta(model4)\n\ncoef_std <- broom::tidy(model4_std) %>%\n  filter(term != \"(Intercept)\") %>%\n  mutate(Standardized = model4_std$standardized.coefficients[term])\n\ntop5_std <- coef_std %>%\n  arrange(desc(abs(Standardized))) %>%\n  slice(1:10)\n\ntop5_std %>%\n  mutate(term = reorder(term, abs(Standardized))) %>%\n  ggplot(aes(x = term, y = Standardized, fill = Standardized > 0)) +\n  geom_col(width = 0.6, show.legend = FALSE) +\n  coord_flip() +\n  geom_text(aes(label = round(Standardized, 3)),\n            hjust = ifelse(top5_std$Standardized > 0, -0.1, 1.1),\n            size = 3.8) +\n  scale_fill_manual(values = c(\"skyblue\", \"hotpink\")) +\n  labs(\n    title = \"Top 10 Standardized Coefficients from Model 4\",\n    x = \"\",\n    y = \"Standardized Coefficient (β)\"\n  ) +\n  theme_minimal(base_size = 13) +\n  geom_hline(yintercept = 0, color = \"black\", linewidth = 0.8) +\n  expand_limits(y = c(-max(abs(top5_std$Standardized)) * 1.2, \n                      max(abs(top5_std$Standardized)) * 1.2)) +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank()\n  )\n\n```\n\n\n\n\n\n## Model Performance{.smaller}\n\n```{r}\n#| out-width: \"75%\"\n#| fig-align: \"center\"\n\n\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(scales)\n\n\nrmse1 <- 153662   # Model 1 RMSE\nr21   <- 0.45     # Model 1 R²\nrmse4 <- 129019   # Model 4 RMSE\nr24   <- 0.61     # Model 4 R²\n\nplot_df1 <- opa_census %>%\n  mutate(\n    pred = predict(model1, newdata = opa_census),\n    obs = sale_price\n  ) %>%\n  dplyr::select(pred, obs)\n\n\nplot_df4 <- opa_census %>%\n  mutate(\n    pred = predict(model4, newdata = opa_census),\n    obs = sale_price\n  ) %>%\n  dplyr::select(pred, obs)\n\np1 <- ggplot(plot_df1, aes(x = pred, y = obs)) +\n  geom_point(alpha = 0.3, color = \"hotpink\") +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\",linewidth = 0.8) +\n  labs(\n    title = \"Model 1\",\n    subtitle = paste0(\"RMSE = \", scales::comma(rmse1), \n                      \", R² = \", round(r21, 2))\n  ) +\n  theme_minimal() +\n  coord_fixed()\n\n\np4 <- ggplot(plot_df4, aes(x = pred, y = obs)) +\n  geom_point(alpha = 0.3, color = \"skyblue\") +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\",linewidth = 0.8) +\n  labs(\n    title = \"Model 4\",\n    subtitle = paste0(\"RMSE = \", scales::comma(rmse4), \n                      \", R² = \", round(r24, 2))\n  ) +\n  theme_minimal() +\n  coord_fixed()\n\np1 + p4 +\n  plot_annotation(\n    title = \"Predicted vs. Actual Sale Prices\",\n    subtitle = \"Comparison between Model 1 and Model 4\",\n    theme = theme(plot.title = element_text(size = 16, face = \"bold\"),\n                  plot.subtitle = element_text(size = 12))\n  )\n\n```\n\n\n\n\n\n## Hardest to Predict{.smaller}\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\n# load the neighborhood data by ward\nwards <- st_read(\"data/Political_Wards.geojson\", quiet = TRUE) %>%\n  st_transform(st_crs(opa_census))\n\nopa_census$pred_price <- predict(model4, newdata = opa_census)\n\nopa_ward <- st_join(opa_census, wards[\"ward_num\"])\n\nward_summary <- opa_ward %>%\n  st_drop_geometry() %>%\n  group_by(ward_num) %>%\n  summarise(\n    mean_actual = mean(sale_price, na.rm = TRUE),\n    mean_pred = mean(pred_price, na.rm = TRUE),\n    median_pred = median(pred_price, na.rm = TRUE),\n    n_properties = n()\n  ) %>%\n  mutate(residual_mean = mean_actual - mean_pred) %>%  \n  arrange(desc(residual_mean))\n\nward_plot_data <- wards %>%\n  left_join(ward_summary, by = \"ward_num\")\n\nggplot(ward_plot_data) +\n  geom_sf(aes(fill = residual_mean), color = \"white\", size = 0.2) +\n  scale_fill_gradient2(\n    low = \"#4575B4\",\n    mid = \"white\",\n    high = \"#D73027\",\n    midpoint = 0,\n    labels = scales::label_dollar()\n  ) +\n  labs(\n    title = \"Mean Prediction Residuals by Ward\",\n    subtitle = \"Positive = Underestimation | Negative = Overestimation\",\n    fill = \"Actual - Predicted\"\n  ) +\n  theme_minimal(base_size = 11) +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank()\n  )\n\n\n```\n\n\n\n\n# Recommendations\n\n- Ensure Fair and Transparent Property Valuation\n\n- Build Community Resilience through Economic Revitalization\n\n- Promote Spatial Equity in Access to Opportunity\n\n\n\n# Limitations & Next Steps\n\n- Limited Performance on High-End Properties\n\n- Spatial but Not Temporal\n\n- Data Incompleteness and Systematic Bias\n\n\n# Questions?\n\n**Thank You!**  \n\n<small>Contact: isabli@upenn.edu · GitHub: [https://github.com/Isabelliiii]</small>\n\n<small>Contact: yusihan@upenn.edu · GitHub: [https://github.com/sihan-yu429]</small>\n\n<small>Contact: lu25@upenn.edu · GitHub: [https://github.com/lluluciano0505]</small>","srcMarkdownNoYaml":"\n\n\n\n\n```{r setup, include=FALSE}\n# ---- Load packages ----\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tidycensus)\nlibrary(tigris)\noptions(tigris_use_cache = TRUE, tigris_class = \"sf\")\nlibrary(MASS)\nlibrary(dplyr)\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(caret)\nlibrary(lm.beta)\nlibrary(knitr)\n\n# ---- Read datasets (adjust path if needed) ----\n# load data\nopa <- read_csv(\"data/opa_properties_public.csv\")\n\n# filter sales (2023 - 2024)\nopa_clean <- opa %>%\n  mutate(sale_date = as.Date(sale_date)) %>%\n  filter(sale_date >= \"2023-01-01\" & sale_date <= \"2024-12-31\")\n\n# Select relevant variables \nopa_var <- opa_clean %>%\n  dplyr::select(\n    sale_date, sale_price, market_value, building_code_description,\n    total_livable_area, number_of_bedrooms, number_of_bathrooms,\n    number_stories, garage_spaces, central_air, quality_grade,\n    interior_condition, exterior_condition, year_built,\n    zip_code, geographic_ward, census_tract, zoning, owner_1,\n    category_code_description, shape\n  )\n\n#filter to residential properties(SINGLE FAMILY)\nopa_var <- opa_var %>% \n  filter(category_code_description == \"SINGLE FAMILY\") %>%\n  distinct() %>%\n  filter(\n    !is.na(total_livable_area) & total_livable_area > 0,\n    !is.na(year_built) & year_built > 1800 & year_built <= 2025,\n  )    \n\n# remove obvious errors & handle missing values, create house age\nopa_var <- opa_var %>%\n  mutate(\n    non_market = ((sale_price / market_value < 0.05) & sale_price < 2000),\n    house_age = 2025 - year_built\n  )\n\nopa_selected <- opa_var %>% \n  filter(\n    non_market==0\n  )   \n\nopa_selected <- opa_selected %>%\n  filter(sale_price <= quantile(sale_price, 0.98, na.rm = TRUE))\n\n\nopa_sf <- st_as_sf(opa_selected, wkt = \"shape\", crs = 2272) %>%\n  st_transform(4326)\n\n# Load Census data for Philadelphia tracts\n# Load Census data for Philadelphia tracts\nphilly_census <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    black = \"B02001_003\",\n    ba_degree = \"B15003_022\",\n    total_edu = \"B15003_001\",\n    \n    median_income = \"B19013_001\",\n   \n    labor_force = \"B23025_003\",\n    unemployed = \"B23025_005\"\n  ),\n  year = 2023,\n  state = \"PA\",\n  county = \"Philadelphia\",\n  geometry = TRUE\n) %>%\n  dplyr::select(GEOID, variable, estimate, geometry) %>%   # ← 用 dplyr::\n  tidyr::pivot_wider(names_from = variable, values_from = estimate) %>%\n  dplyr::mutate(\n    ba_rate = 100 * ba_degree / total_edu,\n    unemployment_rate = 100 * unemployed / labor_force,\n    black_share = 100 * black/total_pop\n  ) %>%\n  st_transform(st_crs(opa_sf))\n\n# Spatial join of OPA data with Census data\nopa_census <- st_join(opa_sf, philly_census, join = st_within) %>%\n  filter(!is.na(median_income))\n\nTransit <- read_csv(\"data/Transit.csv\")\ntransit_sf <- st_as_sf(Transit, coords = c(\"Lon\", \"Lat\"), crs = 4326) %>%\n  st_transform(st_crs(opa_census))\nradius <- 400\nopa_census$transit_count <- lengths(st_is_within_distance(opa_census, transit_sf, dist = radius))\nread_csv(\"data/Transit.csv\", show_col_types = FALSE)\n\nrecreation <- read_csv(\"data/recreation.csv\") \nrecreation_sf <- st_as_sf(recreation, coords = c(\"X\", \"Y\"), crs = 4326) %>% st_transform(st_crs(opa_census)) \nradius_rec <- 1200 \nopa_census$recreation_count <- lengths(st_is_within_distance(opa_census, recreation_sf, dist = radius_rec)) \nread_csv(\"data/recreation.csv\", show_col_types = FALSE)\n\n#recreation dummy 0, 1-3, 4-10+\nopa_census$recreation_dummy <- case_when(\n  opa_census$recreation_count == 0 ~ \"None\",\n  opa_census$recreation_count >= 1 & opa_census$recreation_count <= 3 ~ \"Low\",\n  opa_census$recreation_count >= 4 & opa_census$recreation_count <= 8 ~ \"Medium\",\n  opa_census$recreation_count >= 9 ~ \"High\"\n)\n\n#add center city as a dummy\ncenter_city <- st_read(\"data/CCD_BOUNDARY.geojson\", quiet = TRUE) %>%\n  st_transform(st_crs(opa_census))\n\nopa_census$center_city_dummy <- as.numeric(\n  lengths(st_intersects(opa_census, center_city)) > 0\n)\n\ncrime <- read_csv(\"data/crime.csv\") %>% \n  filter(!is.na(lat) & !is.na(lng)) \ncrime_sf <- st_as_sf(crime, coords = c(\"lng\", \"lat\"), crs = 4326) %>%\n  st_transform(st_crs(opa_census)) \nradius_cri <- 400 \nopa_census$crime_count <- lengths(st_is_within_distance(opa_census, crime_sf, dist = radius_cri))\n\n# find the distance of the nearest hospital\nhospital_sf <- st_read(\"data/hospitals.geojson\", quiet = TRUE) %>%\n  st_transform(st_crs(opa_census))\n\nnearest_hospital_index <- st_nearest_feature(opa_census, hospital_sf)\n\nopa_census$nearest_hospital_m <- st_distance(\n  opa_census,\n  hospital_sf[nearest_hospital_index, ],\n  by_element = TRUE\n)\n\nopa_census$nearest_hospital_m <- as.numeric(opa_census$nearest_hospital_m)\n\nopa_census <- opa_census %>%\n  mutate(\n    has_garage = if_else(!is.na(garage_spaces) & garage_spaces > 0, 1L, 0L)\n  )\n\n\nmodel1 <- lm(sale_price ~ total_livable_area + number_of_bedrooms +\n               number_of_bathrooms + house_age + I(house_age^2),\n             data = opa_census)\n\n\nmodel4 <- lm(sale_price ~ total_livable_area + number_of_bedrooms +number_of_bathrooms + house_age + I(house_age^2) +\n               median_income + ba_rate + crime_count*unemployment_rate + black_share +  + has_garage+\n               center_city_dummy + recreation_dummy +\n               transit_count + nearest_hospital_m + I(nearest_hospital_m^2),\n             data = opa_census)\n\n```\n\n```{r}\n\n```\n\n\n# Introduction\n\n- Why this matter  \n- What we did  \n- Goal\n\n\n\n\n## Data Sources{.smaller}\n\n| Source | Description | Key Variables / Features |\n|--------|-------------|-------------------------|\n| **OPA Property Sales** | 2023–2024 residential transactions | `sale_price`, `total_livable_area`, `number_of_bedrooms`, `number_of_bathrooms`, `house_age`, `garage_spaces` |\n| **Census ACS 2023** | Socioeconomic indicators by tract | `median_income`, `ba_rate`, `unemployment_rate`,  `total_pop` |\n| **OpenDataPhilly – Transit** | Public transit locations | Count of stops within 400 m buffer (`transit_count`) |\n| **OpenDataPhilly – Recreation / Parks** | Recreation locations | Count within 1200 m buffer (`recreation_count`), categorical dummy (`recreation_dummy`) |\n| **OpenDataPhilly – Crime** | Crime incidents | Count of incidents within 400 m (`crime_count`) |\n| **Hospitals** | Hospital locations | Distance to nearest hospital (`nearest_hospital_m`) |\n| **Center City boundary** | Geojson polygon | Binary dummy (`center_city_dummy`) |\n\n\n\n\n\n## Data Overview{.smaller}\n\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\nlibrary(ggplot2)\nlibrary(patchwork)  \n\n\np_raw <- ggplot(opa_var, aes(x = sale_price)) +\n  geom_histogram(bins = 50, fill = \"hotpink\", color = \"black\") +\n  geom_vline(aes(xintercept = median(sale_price)), linetype = \"dashed\") +\n  labs(title = \"Raw Distribution\",\n       x = \"Sale Price\", y = \"Count\") +\n  scale_x_continuous(labels = scales::label_dollar())\n\n\np_cut <- opa_census %>%\n  ggplot(aes(x = sale_price)) +\n  geom_histogram(bins = 50, fill = \"skyblue\", color = \"black\") +\n  geom_vline(aes(xintercept = median(sale_price)), linetype = \"dashed\") +\n  labs(title = \"Trimmed Distribution (selected)\",\n       x = \"Sale Price\", y = \"Count\") +\n  scale_x_continuous(labels = scales::label_dollar())\n\n\nprint(\np_raw / p_cut +\nplot_annotation(\ntitle = \"Sale Price Distributions\",\ntheme = theme(\nplot.title = element_text(\nsize = 14,\nface = \"bold\",\nhjust = 0.5,\nmargin = margin(b = 10)\n)\n)\n)\n)\n```\n\n\n\n## Where Are Expensive Homes?{.smaller}\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\nlibrary(ggplot2)\n\nopa_census <- opa_census %>%\n  mutate(price_quartile = ntile(sale_price, 4))\n\n\nggplot() +\n  geom_sf(data = philly_census, fill = \"lightgrey\", color = \"white\") +\n  geom_sf(data = opa_census, aes(color = factor(price_quartile)), size = 0.1, alpha = 0.7) +\n  scale_color_viridis_d(\n    option = \"plasma\",\n    direction = -1,\n    labels = c(\"0%-25%\", \"25%-50%\", \"50%-75%\", \"75%-100%\")\n  ) +\n  theme_minimal() +\n  labs(\n    title = \"Housing Sales in Philadelphia (2023–2024)\",\n    color = \"Sale Price Quartile\"\n  ) +\n  guides(color = guide_legend(override.aes = list(size = 3)))\n```\n\n\n\n\n\n## What Drives Prices?{.smaller}\n\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\n\np1 <- ggplot(opa_census %>% st_drop_geometry(),\n       aes(x = crime_count, y = sale_price)) +\n  geom_point(alpha = 0.3, color = \"grey60\", size = 1) +\n  geom_smooth(method = \"lm\", color = \"darkorange\", linewidth = 1.2, se = FALSE) +\n  scale_y_continuous(labels = label_dollar()) +\n  labs(\n    title = \"Relationship Between Nearby Crime and Home Sale Price\",\n    x = \"Number of Crimes within 400m\",\n    y = \"Sale Price\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    axis.text = element_text(color = \"grey30\"),\n    axis.title = element_text(color = \"grey20\")\n  )\n\n\nopa_interact <- opa_census %>% \n  st_drop_geometry() %>%\n  mutate(\n    unemp_group = ntile(unemployment_rate, 2),\n    unemp_group = factor(unemp_group,\n                         labels = c(\"Low Unemployment\", \"High Unemployment\"))\n  )\n\n\np2 <- ggplot(opa_interact, aes(x = crime_count, y = sale_price, color = unemp_group)) +\n  geom_point(alpha = 0.25, size = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, linewidth = 1.2) +\n  scale_y_continuous(labels = label_dollar()) +\n  scale_color_viridis_d(option = \"plasma\", direction = -1) +\n  labs(\n    title = \"Interaction: Crime × Unemployment Level\",\n    x = \"Number of Crimes within 400m\",\n    y = \"Sale Price\",\n    color = \"Unemployment Group\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"top\",\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank()\n  )\n\n\np1 / p2\n\n```\n\n\n\n\n\n## Top Predictors{.smaller}\n\n```{r}\n#| out-width: \"85%\"\n#| fig-align: \"center\"\n#| warning: false\n#| message: false\n\nmodel4_std <- lm.beta(model4)\n\ncoef_std <- broom::tidy(model4_std) %>%\n  filter(term != \"(Intercept)\") %>%\n  mutate(Standardized = model4_std$standardized.coefficients[term])\n\ntop5_std <- coef_std %>%\n  arrange(desc(abs(Standardized))) %>%\n  slice(1:10)\n\ntop5_std %>%\n  mutate(term = reorder(term, abs(Standardized))) %>%\n  ggplot(aes(x = term, y = Standardized, fill = Standardized > 0)) +\n  geom_col(width = 0.6, show.legend = FALSE) +\n  coord_flip() +\n  geom_text(aes(label = round(Standardized, 3)),\n            hjust = ifelse(top5_std$Standardized > 0, -0.1, 1.1),\n            size = 3.8) +\n  scale_fill_manual(values = c(\"skyblue\", \"hotpink\")) +\n  labs(\n    title = \"Top 10 Standardized Coefficients from Model 4\",\n    x = \"\",\n    y = \"Standardized Coefficient (β)\"\n  ) +\n  theme_minimal(base_size = 13) +\n  geom_hline(yintercept = 0, color = \"black\", linewidth = 0.8) +\n  expand_limits(y = c(-max(abs(top5_std$Standardized)) * 1.2, \n                      max(abs(top5_std$Standardized)) * 1.2)) +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    panel.grid.minor = element_blank()\n  )\n\n```\n\n\n\n\n\n## Model Performance{.smaller}\n\n```{r}\n#| out-width: \"75%\"\n#| fig-align: \"center\"\n\n\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(scales)\n\n\nrmse1 <- 153662   # Model 1 RMSE\nr21   <- 0.45     # Model 1 R²\nrmse4 <- 129019   # Model 4 RMSE\nr24   <- 0.61     # Model 4 R²\n\nplot_df1 <- opa_census %>%\n  mutate(\n    pred = predict(model1, newdata = opa_census),\n    obs = sale_price\n  ) %>%\n  dplyr::select(pred, obs)\n\n\nplot_df4 <- opa_census %>%\n  mutate(\n    pred = predict(model4, newdata = opa_census),\n    obs = sale_price\n  ) %>%\n  dplyr::select(pred, obs)\n\np1 <- ggplot(plot_df1, aes(x = pred, y = obs)) +\n  geom_point(alpha = 0.3, color = \"hotpink\") +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\",linewidth = 0.8) +\n  labs(\n    title = \"Model 1\",\n    subtitle = paste0(\"RMSE = \", scales::comma(rmse1), \n                      \", R² = \", round(r21, 2))\n  ) +\n  theme_minimal() +\n  coord_fixed()\n\n\np4 <- ggplot(plot_df4, aes(x = pred, y = obs)) +\n  geom_point(alpha = 0.3, color = \"skyblue\") +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", color = \"black\",linewidth = 0.8) +\n  labs(\n    title = \"Model 4\",\n    subtitle = paste0(\"RMSE = \", scales::comma(rmse4), \n                      \", R² = \", round(r24, 2))\n  ) +\n  theme_minimal() +\n  coord_fixed()\n\np1 + p4 +\n  plot_annotation(\n    title = \"Predicted vs. Actual Sale Prices\",\n    subtitle = \"Comparison between Model 1 and Model 4\",\n    theme = theme(plot.title = element_text(size = 16, face = \"bold\"),\n                  plot.subtitle = element_text(size = 12))\n  )\n\n```\n\n\n\n\n\n## Hardest to Predict{.smaller}\n```{r}\n#| out-width: \"80%\"\n#| fig-align: \"center\"\n\n# load the neighborhood data by ward\nwards <- st_read(\"data/Political_Wards.geojson\", quiet = TRUE) %>%\n  st_transform(st_crs(opa_census))\n\nopa_census$pred_price <- predict(model4, newdata = opa_census)\n\nopa_ward <- st_join(opa_census, wards[\"ward_num\"])\n\nward_summary <- opa_ward %>%\n  st_drop_geometry() %>%\n  group_by(ward_num) %>%\n  summarise(\n    mean_actual = mean(sale_price, na.rm = TRUE),\n    mean_pred = mean(pred_price, na.rm = TRUE),\n    median_pred = median(pred_price, na.rm = TRUE),\n    n_properties = n()\n  ) %>%\n  mutate(residual_mean = mean_actual - mean_pred) %>%  \n  arrange(desc(residual_mean))\n\nward_plot_data <- wards %>%\n  left_join(ward_summary, by = \"ward_num\")\n\nggplot(ward_plot_data) +\n  geom_sf(aes(fill = residual_mean), color = \"white\", size = 0.2) +\n  scale_fill_gradient2(\n    low = \"#4575B4\",\n    mid = \"white\",\n    high = \"#D73027\",\n    midpoint = 0,\n    labels = scales::label_dollar()\n  ) +\n  labs(\n    title = \"Mean Prediction Residuals by Ward\",\n    subtitle = \"Positive = Underestimation | Negative = Overestimation\",\n    fill = \"Actual - Predicted\"\n  ) +\n  theme_minimal(base_size = 11) +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank()\n  )\n\n\n```\n\n\n\n\n# Recommendations\n\n- Ensure Fair and Transparent Property Valuation\n\n- Build Community Resilience through Economic Revitalization\n\n- Promote Spatial Equity in Access to Opportunity\n\n\n\n# Limitations & Next Steps\n\n- Limited Performance on High-End Properties\n\n- Spatial but Not Temporal\n\n- Data Incompleteness and Systematic Bias\n\n\n# Questions?\n\n**Thank You!**  \n\n<small>Contact: isabli@upenn.edu · GitHub: [https://github.com/Isabelliiii]</small>\n\n<small>Contact: yusihan@upenn.edu · GitHub: [https://github.com/sihan-yu429]</small>\n\n<small>Contact: lu25@upenn.edu · GitHub: [https://github.com/lluluciano0505]</small>"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdn.jsdelivr.net/npm/mathjax@2.7.9/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"Yu_Sihan_Presentation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.8.25","auto-stretch":true,"title":"Philadelphia Housing Price Prediction","subtitle":"Improving Property Tax Assessments","author":"Isabelle Li, Luciano Lu, Sihan Yu","theme":"simple","slideNumber":true,"smaller":true}}},"projectFormats":["html"]}